native {
    var global_variable : int = 0
    immutable_global := 1.0

    pub fn add(x:int, y:int): int {
        return x + y
    }

    pub fn sub(x:int, y:int): int {
        return x - y
    }

    fn add_floats(x:float, y:float): float {
        return x + y
    }

    pub fn call_fn():int {
        return add(1,2)
    }

    fn set_var() {
        var x : int = 1
        var y : int = 2
        var z : float = 1.0
        var s : int = x
    }

    fn infer_types() {
        var x := 1
        var y := x
        var z := call_fn()
    }

    fn read_global_test(): int {
        return global_variable
    }

    fn set_and_param(p1 : int): int {
        var x := 2121

        return x + p1
    }
}